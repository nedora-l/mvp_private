"use client";

import { useState } from "react";
import { useI18n } from '@/lib/i18n/use-i18n';
import { AppComponentDictionaryProps } from "@/lib/interfaces/common/dictionary-props-component";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Progress } from "@/components/ui/progress";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { 
  ScanSearch, 
  AlertTriangle, 
  Shield, 
  Server, 
  Eye, 
  Download,
  Search,
  CheckCircle,
  XCircle,
  Clock,
  TrendingUp,
  Calendar,
  Filter,
  ExternalLink
} from "lucide-react";
import { useSession } from "next-auth/react";
import { MobileBottomNav } from "@/components/mobile-bottom-nav";

// Mock data for vulnerability management
const vulnerabilities = [
  {
    id: "CVE-2025-1234",
    title: "Remote Code Execution in Apache HTTP Server",
    severity: "critical",
    cvssScore: 9.8,
    affectedSystems: ["web-server-01", "web-server-02", "web-server-03"],
    discoveredDate: "2025-06-25",
    dueDate: "2025-07-05",
    status: "open",
    assignedTo: "Équipe Infrastructure",
    description: "Une vulnérabilité permettant l'exécution de code à distance",
    references: ["https://nvd.nist.gov/vuln/detail/CVE-2025-1234"]
  },
  {
    id: "CVE-2025-5678",
    title: "SQL Injection in Customer Portal",
    severity: "high",
    cvssScore: 8.1,
    affectedSystems: ["portal-db-01"],
    discoveredDate: "2025-06-28",
    dueDate: "2025-07-15",
    status: "in_progress",
    assignedTo: "Équipe Développement",
    description: "Injection SQL possible dans le module de recherche",
    references: ["Internal Security Assessment"]
  },
  {
    id: "CVE-2025-9012",
    title: "Cross-Site Scripting (XSS) Vulnerability",
    severity: "medium",
    cvssScore: 6.1,
    affectedSystems: ["intranet-app"],
    discoveredDate: "2025-06-20",
    dueDate: "2025-07-30",
    status: "resolved",
    assignedTo: "Équipe Sécurité",
    description: "XSS stocké dans le module de commentaires",
    references: ["Penetration Test Report"]
  },
  {
    id: "CVE-2025-3456",
    title: "Weak Authentication in Admin Panel",
    severity: "high",
    cvssScore: 7.5,
    affectedSystems: ["admin-panel"],
    discoveredDate: "2025-06-30",
    dueDate: "2025-07-10",
    status: "open",
    assignedTo: "Équipe Infrastructure",
    description: "Authentification faible permettant les attaques par force brute",
    references: ["Security Code Review"]
  }
];

const systemsOverview = [
  {
    system: "Serveurs Web",
    total: 12,
    critical: 3,
    high: 5,
    medium: 8,
    low: 15,
    lastScan: "2025-07-01 02:00",
    nextScan: "2025-07-02 02:00"
  },
  {
    system: "Base de Données",
    total: 8,
    critical: 1,
    high: 2,
    medium: 4,
    low: 8,
    lastScan: "2025-06-30 23:00",
    nextScan: "2025-07-01 23:00"
  },
  {
    system: "Applications",
    total: 25,
    critical: 2,
    high: 8,
    medium: 12,
    low: 20,
    lastScan: "2025-07-01 01:30",
    nextScan: "2025-07-02 01:30"
  },
  {
    system: "Infrastructure Réseau",
    total: 6,
    critical: 0,
    high: 1,
    medium: 3,
    low: 5,
    lastScan: "2025-07-01 00:15",
    nextScan: "2025-07-02 00:15"
  }
];

const remediationStats = {
  totalVulnerabilities: 210,
  criticalVulnerabilities: 6,
  patchedThisMonth: 45,
  averageResolutionTime: "12.5 jours",
  complianceScore: 87
};

export default function VulnerabilityManagementPageComponent({ dictionary, locale }: AppComponentDictionaryProps) {
  const { t } = useI18n(dictionary);
  const { data: session } = useSession();
  const [searchTerm, setSearchTerm] = useState("");
  const [severityFilter, setSeverityFilter] = useState("all");
  const [statusFilter, setStatusFilter] = useState("all");

  const getSeverityBadge = (severity: string, score?: number) => {
    const variants = {
      critical: { variant: "destructive" as const, text: "Critique", className: "bg-red-600 text-white" },
      high: { variant: "destructive" as const, text: "Élevé", className: "bg-orange-500 text-white" },
      medium: { variant: "secondary" as const, text: "Moyen", className: "bg-yellow-500 text-white" },
      low: { variant: "outline" as const, text: "Faible", className: "bg-green-100 text-green-800" }
    };
    
    const config = variants[severity as keyof typeof variants];
    return (
      <div className="flex items-center gap-2">
        <Badge variant={config.variant} className={config.className}>
          {config.text}
        </Badge>
        {score && (
          <span className="text-sm font-mono text-gray-600">
            {score}/10
          </span>
        )}
      </div>
    );
  };

  const getStatusBadge = (status: string) => {
    const variants = {
      open: { variant: "destructive" as const, icon: <XCircle className="h-3 w-3" />, text: "Ouvert" },
      in_progress: { variant: "secondary" as const, icon: <Clock className="h-3 w-3" />, text: "En cours" },
      resolved: { variant: "default" as const, icon: <CheckCircle className="h-3 w-3" />, text: "Résolu" },
      verified: { variant: "default" as const, icon: <Shield className="h-3 w-3" />, text: "Vérifié" }
    };
    
    const config = variants[status as keyof typeof variants];
    return (
      <Badge variant={config.variant} className="flex items-center gap-1">
        {config.icon}
        {config.text}
      </Badge>
    );
  };

  const getDaysUntilDue = (dueDate: string) => {
    const due = new Date(dueDate);
    const today = new Date();
    const diffTime = due.getTime() - today.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    if (diffDays < 0) {
      return <span className="text-red-600 font-medium">En retard de {Math.abs(diffDays)} jours</span>;
    } else if (diffDays <= 3) {
      return <span className="text-orange-600 font-medium">{diffDays} jours restants</span>;
    } else {
      return <span className="text-gray-600">{diffDays} jours restants</span>;
    }
  };

  return (
    <div className="flex-1 space-y-6 p-6">
      {/* Header Section */}
      <div className="space-y-4">
        <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
          <div className="flex items-center gap-3">
            <ScanSearch className="h-6 w-6 text-red-600" />
            <h1 className="text-2xl lg:text-3xl font-bold text-gray-900">
              Gestion des Vulnérabilités
            </h1>
          </div>
          <div className="flex items-center gap-2">
            <Button variant="outline">
              <Download className="mr-2 h-4 w-4" />
              Rapport CVE
            </Button>
            <Button>
              <ScanSearch className="mr-2 h-4 w-4" />
              Nouveau Scan
            </Button>
          </div>
        </div>
        <p className="text-gray-600">
          Suivi et correction des vulnérabilités de sécurité dans l'infrastructure
        </p>
      </div>

      {/* Key Metrics */}
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-5">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Total</CardTitle>
            <ScanSearch className="h-4 w-4 text-gray-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{remediationStats.totalVulnerabilities}</div>
            <p className="text-xs text-muted-foreground">vulnérabilités</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Critiques</CardTitle>
            <AlertTriangle className="h-4 w-4 text-red-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-red-600">{remediationStats.criticalVulnerabilities}</div>
            <p className="text-xs text-muted-foreground">nécessitent une action immédiate</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Corrigées</CardTitle>
            <CheckCircle className="h-4 w-4 text-green-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{remediationStats.patchedThisMonth}</div>
            <p className="text-xs text-muted-foreground">ce mois</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Temps Moyen</CardTitle>
            <Clock className="h-4 w-4 text-blue-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{remediationStats.averageResolutionTime}</div>
            <p className="text-xs text-muted-foreground">de résolution</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Conformité</CardTitle>
            <Shield className="h-4 w-4 text-green-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{remediationStats.complianceScore}%</div>
            <p className="text-xs text-muted-foreground">score global</p>
          </CardContent>
        </Card>
      </div>

      {/* Main Content */}
      <Card>
        <CardHeader>
          <CardTitle className="text-xl font-bold">Suivi des Vulnérabilités</CardTitle>
        </CardHeader>
        <CardContent>
          <Tabs defaultValue="vulnerabilities" className="space-y-4">
            <TabsList className="grid w-full grid-cols-1 sm:grid-cols-3 h-auto">
              <TabsTrigger value="vulnerabilities" className="flex items-center">
                <AlertTriangle className="mr-2 h-4 w-4" />
                Vulnérabilités
              </TabsTrigger>
              <TabsTrigger value="systems" className="flex items-center">
                <Server className="mr-2 h-4 w-4" />
                Vue par Système
              </TabsTrigger>
              <TabsTrigger value="trends" className="flex items-center">
                <TrendingUp className="mr-2 h-4 w-4" />
                Tendances
              </TabsTrigger>
            </TabsList>

            <TabsContent value="vulnerabilities" className="space-y-4">
              {/* Search and Filter Bar */}
              <div className="flex flex-col sm:flex-row gap-4 mb-4">
                <div className="relative flex-1">
                  <Search className="absolute left-3 top-3 h-4 w-4 text-gray-400" />
                  <Input
                    placeholder="Rechercher par CVE, titre, ou système..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10"
                  />
                </div>
                <Select value={severityFilter} onValueChange={setSeverityFilter}>
                  <SelectTrigger className="w-full sm:w-48">
                    <SelectValue placeholder="Filtrer par sévérité" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">Toutes les sévérités</SelectItem>
                    <SelectItem value="critical">Critique</SelectItem>
                    <SelectItem value="high">Élevé</SelectItem>
                    <SelectItem value="medium">Moyen</SelectItem>
                    <SelectItem value="low">Faible</SelectItem>
                  </SelectContent>
                </Select>
                <Select value={statusFilter} onValueChange={setStatusFilter}>
                  <SelectTrigger className="w-full sm:w-48">
                    <SelectValue placeholder="Filtrer par statut" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">Tous les statuts</SelectItem>
                    <SelectItem value="open">Ouvert</SelectItem>
                    <SelectItem value="in_progress">En cours</SelectItem>
                    <SelectItem value="resolved">Résolu</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {/* Vulnerabilities Table */}
              <div className="border rounded-lg">
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>CVE & Description</TableHead>
                      <TableHead>Sévérité</TableHead>
                      <TableHead>Systèmes Affectés</TableHead>
                      <TableHead>Statut</TableHead>
                      <TableHead>Échéance</TableHead>
                      <TableHead>Actions</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    {vulnerabilities.map((vuln) => (
                      <TableRow key={vuln.id}>
                        <TableCell>
                          <div>
                            <div className="font-medium font-mono text-sm">{vuln.id}</div>
                            <div className="font-medium">{vuln.title}</div>
                            <div className="text-sm text-gray-500">{vuln.description}</div>
                          </div>
                        </TableCell>
                        <TableCell>{getSeverityBadge(vuln.severity, vuln.cvssScore)}</TableCell>
                        <TableCell>
                          <div className="space-y-1">
                            {vuln.affectedSystems.slice(0, 2).map((system, index) => (
                              <div key={index} className="text-sm font-mono bg-gray-100 px-2 py-1 rounded">
                                {system}
                              </div>
                            ))}
                            {vuln.affectedSystems.length > 2 && (
                              <div className="text-xs text-gray-500">
                                +{vuln.affectedSystems.length - 2} autres
                              </div>
                            )}
                          </div>
                        </TableCell>
                        <TableCell>{getStatusBadge(vuln.status)}</TableCell>
                        <TableCell>
                          <div>
                            <div className="text-sm">{vuln.dueDate}</div>
                            <div className="text-xs">
                              {getDaysUntilDue(vuln.dueDate)}
                            </div>
                          </div>
                        </TableCell>
                        <TableCell>
                          <div className="flex items-center gap-2">
                            <Button variant="ghost" size="sm">
                              <Eye className="h-4 w-4" />
                            </Button>
                            <Button variant="ghost" size="sm">
                              <ExternalLink className="h-4 w-4" />
                            </Button>
                          </div>
                        </TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </div>
            </TabsContent>

            <TabsContent value="systems" className="space-y-4">
              {/* Systems Overview */}
              <div className="grid gap-4">
                {systemsOverview.map((system, index) => (
                  <Card key={index}>
                    <CardHeader>
                      <div className="flex items-center justify-between">
                        <CardTitle className="text-lg">{system.system}</CardTitle>
                        <Badge variant="outline">
                          {system.total} vulnérabilités
                        </Badge>
                      </div>
                    </CardHeader>
                    <CardContent>
                      <div className="grid gap-4 md:grid-cols-2">
                        <div>
                          <h4 className="font-medium mb-3">Distribution par sévérité</h4>
                          <div className="grid grid-cols-4 gap-2 text-center">
                            <div className="p-2 bg-red-100 rounded">
                              <div className="text-lg font-bold text-red-600">{system.critical}</div>
                              <div className="text-xs text-red-600">Critique</div>
                            </div>
                            <div className="p-2 bg-orange-100 rounded">
                              <div className="text-lg font-bold text-orange-600">{system.high}</div>
                              <div className="text-xs text-orange-600">Élevé</div>
                            </div>
                            <div className="p-2 bg-yellow-100 rounded">
                              <div className="text-lg font-bold text-yellow-600">{system.medium}</div>
                              <div className="text-xs text-yellow-600">Moyen</div>
                            </div>
                            <div className="p-2 bg-green-100 rounded">
                              <div className="text-lg font-bold text-green-600">{system.low}</div>
                              <div className="text-xs text-green-600">Faible</div>
                            </div>
                          </div>
                        </div>
                        <div>
                          <h4 className="font-medium mb-3">Planification des scans</h4>
                          <div className="space-y-2 text-sm">
                            <div className="flex items-center gap-2">
                              <Calendar className="h-4 w-4 text-gray-500" />
                              <span>Dernier scan: {system.lastScan}</span>
                            </div>
                            <div className="flex items-center gap-2">
                              <Calendar className="h-4 w-4 text-blue-500" />
                              <span>Prochain scan: {system.nextScan}</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="trends" className="space-y-4">
              <div className="grid gap-6 md:grid-cols-2">
                <Card>
                  <CardHeader>
                    <CardTitle>Évolution des Vulnérabilités</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div className="flex items-center justify-between">
                        <span>Nouvelles vulnérabilités (30 jours)</span>
                        <span className="font-bold">24</span>
                      </div>
                      <div className="flex items-center justify-between">
                        <span>Vulnérabilités corrigées (30 jours)</span>
                        <span className="font-bold text-green-600">45</span>
                      </div>
                      <div className="flex items-center justify-between">
                        <span>Temps moyen de correction</span>
                        <span className="font-bold">12.5 jours</span>
                      </div>
                      <Progress value={75} className="mt-4" />
                      <p className="text-sm text-gray-600">75% des vulnérabilités critiques corrigées dans les délais</p>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>Score de Conformité</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div className="text-center">
                        <div className="text-4xl font-bold text-green-600">{remediationStats.complianceScore}%</div>
                        <p className="text-sm text-gray-600">Score global de conformité</p>
                      </div>
                      <Progress value={remediationStats.complianceScore} className="mt-4" />
                      <div className="grid grid-cols-2 gap-4 text-sm">
                        <div>
                          <div className="font-medium">Objectif</div>
                          <div className="text-gray-600">≥ 90%</div>
                        </div>
                        <div>
                          <div className="font-medium">Tendance</div>
                          <div className="text-green-600 flex items-center gap-1">
                            <TrendingUp className="h-4 w-4" />
                            +3% ce mois
                          </div>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>
          </Tabs>
        </CardContent>
      </Card>

      <MobileBottomNav dictionary={dictionary} />
    </div>
  );
}
